<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>The Web3 Journey for Pacman Blog</title>
        <link>https://huwangtao123.github.io/zh-CN/blog</link>
        <description>The Web3 Journey for Pacman Blog</description>
        <lastBuildDate>Sat, 04 Aug 2018 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[Javascript Study Note 1 - From javascript.info]]></title>
            <link>https://huwangtao123.github.io/zh-CN/blog/Javascript_Study_Note</link>
            <guid>Javascript_Study_Note</guid>
            <pubDate>Sat, 04 Aug 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Javascript can execute not only in the browser, but also on the server, or actually on any device where there exists a special program called the JavaScript Engine]]></description>
            <content:encoded><![CDATA[<p>Javascript can execute not only in the browser, but also on the server, or actually on any device where there exists a special program called the JavaScript Engine</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-engines-work">How do engines work<a class="hash-link" href="#how-do-engines-work" title="标题的直接链接">​</a></h2><p>Engines are complicated. But the basics are easy</p><ul><li>The engine reads teh script</li><li>Then it converts the script to the machine language</li><li>Then the machine code runs, pretty fast</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="in-browser-javascript-is-able-to">In-browser Javascript is able to<a class="hash-link" href="#in-browser-javascript-is-able-to" title="标题的直接链接">​</a></h3><ul><li>Add new HTML to the page, change the existing content, modify styles
React to user actions, run on mouse clicks, pointer movements, key presses.</li><li>Send requests over the network to remote network, download and upload files (Ajax and COMET)
Get and set cookie, ask quesitons to the visitor, show messages
Remember the data on the client side(local storage)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="restriction">Restriction<a class="hash-link" href="#restriction" title="标题的直接链接">​</a></h3><ul><li>JavaScript on a webpage may not read/write arbitrary files on the hard disk, copy them or execute programs, no access to OS system functions</li><li>Different tabs/windows generally do not know each other. Same Origin Policy.</li><li>Javascript can easily communicate over the net to the server where the current page came from. But its ability to receive data from other sites/domains is crippled</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fundamentals">Fundamentals<a class="hash-link" href="#fundamentals" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="variable">Variable<a class="hash-link" href="#variable" title="标题的直接链接">​</a></h3><p>we can declare variables to store data. That can be done using var or let or const</p><ul><li>let - is a modern variable declaration</li><li>var - old-scholl variable declaration</li><li>const - the value of variable can’t be changed</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="type">Type<a class="hash-link" href="#type" title="标题的直接链接">​</a></h3><p>There are 7 basic types in Javascript</p><ul><li>number for numbers of any kind: integer or floating-point</li><li>String for sttrings</li><li>boolean</li><li>null for unknown values - a standalone type</li><li>object for more complex data structures</li><li>symbol for unique identifiers</li></ul><p>The typeof operator allows us to see whihc type is tored in the variable</p><ul><li>Two forms : typeof x or typeof(x)</li><li>Return a string with the name of the type</li></ul><p>Backticks are extended functionality quotes. They allow us to embed variables and expressions into a string by wrapping them in ${..}</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'John'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// embed a variable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Hello </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">!</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// embed an expression</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">the result is </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation number" style="color:#36acaa">1</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:#393A34">+</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:#36acaa">2</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>javascript</category>
        </item>
    </channel>
</rss>